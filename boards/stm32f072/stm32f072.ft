HEX

: REGISTER   CREATE , DOES> @ + ;

1 CONSTANT HIGH
0 CONSTANT LOW
1 CONSTANT ENABLE
0 CONSTANT DISABLE
1 CONSTANT ON
0 CONSTANT OFF

48000000 CONSTANT GPIOA
48000400 CONSTANT GPIOB
48000800 CONSTANT GPIOC
48000C00 CONSTANT GPIOD
48001000 CONSTANT GPIOE
48001400 CONSTANT GPIOF

00 REGISTER GPIO-MODER
04 REGISTER GPIO-OTYPER
08 REGISTER GPIO-OSPEEDR
0C REGISTER GPIO-PUPDR
10 REGISTER GPIO-IDR
14 REGISTER GPIO-ODR
18 REGISTER GPIO-BSRR
1C REGISTER GPIO-LOCKR
20 REGISTER GPIO-AFRL
24 REGISTER GPIO-AHRH
28 REGISTER GPIO-BRR

40021000 CONSTANT RCC
40021000 CONSTANT RCC-CR
40021004 CONSTANT RCC-CFGR
40021008 CONSTANT RCC-CIR
4002100C CONSTANT RCC-APB2RSTR
40021010 CONSTANT RCC-APB1RSTR
40021014 CONSTANT RCC-AHBENR
40021018 CONSTANT RCC-APB2ENR
4002101C CONSTANT RCC-APB1ENR
40021020 CONSTANT RCC-BDCR
40021024 CONSTANT RCC-CSR
40021028 CONSTANT RCC-AHBRSTR
4002102C CONSTANT RCC-CFGR2

40012400 CONSTANT ADC
40012400 CONSTANT ADC-ISR
40012404 CONSTANT ADC-IER
40012408 CONSTANT ADC-CR
4001240C CONSTANT ADC-CFGR1
40012410 CONSTANT ADC-CFGR2
40012414 CONSTANT ADC-SMPR
40012420 CONSTANT ADC-TR
40012428 CONSTANT ADC-CHSELR
40012440 CONSTANT ADC-DR
40012708 CONSTANT ADC-CCR

40010000 CONSTANT SYSCFG
40010000 CONSTANT SYSCFG-CFGR1
40010008 CONSTANT SYSCFG-EXTICR1
4001000C CONSTANT SYSCFG-EXTICR2
40010010 CONSTANT SYSCFG-EXTICR3
40010014 CONSTANT SYSCFG-EXTICR4
40010018 CONSTANT SYSCFG-CFGR2

40010400 CONSTANT EXTI
40010400 CONSTANT EXTI-IMR
40010404 CONSTANT EXTI-EMR
40010408 CONSTANT EXTI-RTSR
4001040C CONSTANT EXTI-FTSR
40010410 CONSTANT EXTI-SWIER
40010414 CONSTANT EXTI-PR

0E000E000 CONSTANT NVIC
0E000E100 CONSTANT NVIC-ISER
0E000E180 CONSTANT NVIC-ICER
0E000E200 CONSTANT NVIC-ISPR
0E000E280 CONSTANT NVIC-ICPR
0E000E300 CONSTANT NVIC-ACTIVE-BASE
0E000E400 CONSTANT NVIC-IPR0

40007000 CONSTANT PWR
40007000 CONSTANT PWR-CR
40007004 CONSTANT PWR-CSR

40002800 CONSTANT RTC
40002800 CONSTANT RTC-TR
40002804 CONSTANT RTC-DR
40002808 CONSTANT RTC-CR
4000280C CONSTANT RTC-ISR
40002810 CONSTANT RTC-PRER
4000281C CONSTANT RTC-ALRMAR
40002824 CONSTANT RTC-WPR
40002828 CONSTANT RTC-SSR
4000282C CONSTANT RTC-SHIFTR
40002830 CONSTANT RTC-TSTR
40002834 CONSTANT RTC-TDSR
40002838 CONSTANT RTC-TSSSR
4000283C CONSTANT RTC-CALR
40002840 CONSTANT RTC-TAFCR
40002844 CONSTANT RTC-ALRMASSR

40005C00 CONSTANT USB-EP0R
40005C04 CONSTANT USB-EP1R
40005C08 CONSTANT USB-EP2R
40005C0C CONSTANT USB-EP3R
40005C10 CONSTANT USB-EP4R
40005C14 CONSTANT USB-EP5R
40005C18 CONSTANT USB-EP6R
40005C1C CONSTANT USB-EP7R
40005C40 CONSTANT USB-CNTR
40005C44 CONSTANT USB-ISTR
40005C48 CONSTANT USB-FNR
40005C4C CONSTANT USB-DADDR
40005C50 CONSTANT USB-BTABLE
40005C54 CONSTANT USB-LPMCSR
40005C58 CONSTANT USB-BCDR
40006000 CONSTANT USB-PMA

: GPIOA-INIT   20000 RCC-AHBENR BIS!   28281400 GPIOA GPIO-MODER ! ;
: GPIOB-INIT   40000 RCC-AHBENR BIS! ;
: LEDS-INIT   GPIOB-INIT GPIOB GPIO-MODER 0FFF0FFFF OVER @ AND 000050000 OR SWAP ! ;
: LED1-ON   00000100 GPIOB GPIO-BSRR ! ;
: LED1-OFF   01000000 GPIOB GPIO-BSRR ! ;
: LED2-ON   00000200 GPIOB GPIO-BSRR ! ;
: LED2-OFF   02000000 GPIOB GPIO-BSRR ! ;

: ADC-ENABLE
   200 RCC-APB2ENR BIS!
   1 ADC-CR BIS!
;

: ADC-SAMPLE ( n -- )
   1 SWAP ROTATE ADC-CHSELR !
   4 ADC-CR BIS!
   ADC-ISR BEGIN DUP @ 4 AND UNTIL DROP ADC-DR @
;

: ADC-DISABLE
   0 ADC-CR !
   200 RCC-APB2ENR BIC!
;

: SYSCFG-ENABLE
   1 RCC-APB2ENR BIS!
;

: ? @ . ;

VARIABLE EXTI-EVT

: BUTTON-IRQ-HANDLER
   EXTI-EVT DUP @ INVERT SWAP !
   7 BIT EXTI-PR BIS!
;

: BUTTON-IRQ-ENABLE
   0 EXTI-EVT !
   ['] BUTTON-IRQ-HANDLER IVT #23 CELLS + !
   SYSCFG-ENABLE 00001000 SYSCFG-EXTICR2 !
   7 BIT NVIC-ISER BIS!
   7 BIT DUP EXTI-RTSR BIS!
   EXTI-IMR BIS!
;

: DISABLE-PERIPH
   7E0000 RCC-AHBENR !
   0FFFFFFFF DUP GPIOB ! DUP GPIOC ! GPIOF !
   0FFFFFFCF GPIOA !
   0 RCC-AHBENR !
;

: PWR-ENABLE   10000000 RCC-APB1ENR BIS! ;
: DEEPSLEEP   4 0E000ED10 !  ;
: LOW-LDO   1 PWR-CR BIS! ;
: STANDBY   2 PWR-CR BIS! ;

: STOP-WFI   PWR-ENABLE DEEPSLEEP LOW-LDO DISABLE-PERIPH WFI GPIOA-INIT ;

: LSI-ENABLE   RCC-CSR 1 OVER BIS! BEGIN DUP @ 2 AND UNTIL DROP ;

: RTC-UNLOCK   0CA RTC-WPR C! 53 RTC-WPR C! ;

: RTC-ENABLE
   PWR-ENABLE   LSI-ENABLE   100 PWR-CR BIS!   8200 RCC-BDCR BIS!
   RTC-UNLOCK
;

: RTC-INIT
   RTC-ENABLE   RTC-ISR 80 OVER BIS! BEGIN DUP @ 40 AND UNTIL DROP
;

8 CELLS BUFFER USB-CTR-HANDLERS
0BD00 CONSTANT USB-DEFAULT-IRQMASK

: USB-BTABLE-PTR  ( offset -- btable )   USB-PMA + ;
: (USB-BTABLE-TX)  ( ep -- tx-offset )   8 * USB-BTABLE-PTR ;
: USB-BTABLE-TX  ( ep -- tx-addr )   (USB-BTABLE-TX) H@ USB-PMA + ;
: USB-BTABLE-TX#  ( ep -- rx#-addr )   8 * 2 + USB-BTABLE-PTR ;
: (USB-BTABLE-RX)  ( ep -- rx-offset )   8 * 4 + USB-BTABLE-PTR ;
: USB-BTABLE-RX  ( ep -- rx-addr )   (USB-BTABLE-RX) H@ USB-PMA + ;
: USB-BTABLE-RX#  ( ep -- rx#-addr )   8 * 6 + USB-BTABLE-PTR ;
: HMOVE ( src dst c -- )   1+ 2/ 0 DO OVER DUP C@ SWAP 1+ C@ 8 LSHIFT OR OVER H! 1+ 1+ SWAP 1+ 1+ SWAP LOOP 2DROP ;
: PMA> ( pma buffer c -- )   HMOVE ;
: >PMA ( buffer pma c -- )   HMOVE ;

: USB-REENUMERATE 8000 USB-BCDR BIC!  100 DELAY 8000 USB-BCDR BIS!  ;
: USB-RESET
    0 USB-BTABLE !   USB-PMA 400 0 FILL
    3210 USB-EP0R !    40 0 (USB-BTABLE-RX) H! 8400 0 USB-BTABLE-RX# H!
                       80 0 (USB-BTABLE-TX) H!    0 0 USB-BTABLE-TX# H!
    0020 USB-EP1R !   0C0 1 (USB-BTABLE-TX) H!    0 1 USB-BTABLE-TX# H!
    0620 USB-EP2R !   100 2 (USB-BTABLE-TX) H!    0 2 USB-BTABLE-TX# H!
    3000 USB-EP3R !   110 3 (USB-BTABLE-RX) H! 8400 3 USB-BTABLE-RX# H!
    80 USB-DADDR ! ;
: USB-SUSPEND
    LED2-ON
    0C USB-CNTR BIS! ;
: USB-WAKE
    LED2-OFF
    4 USB-CNTR BIC!   USB-DEFAULT-IRQMASK USB-CNTR ! ;
: USB-DEFAULT-CTR ( ep dir -- )
    CR ." DIR: " . ." EP: " DUP . ." EPxR: " DUP CELLS USB-EP0R + @ . CR
    \ DUP USB-BTABLE-RX OVER USB-BTABLE-RX# H@ 3FF AND DUMP
    CELLS USB-EP0R + DUP @ 0F0F AND SWAP ! ;
: USB-CTR
    USB-ISTR @ DUP 0F AND SWAP 10 AND
    OVER CELLS USB-CTR-HANDLERS + @
    ?DUP IF EXECUTE ELSE USB-DEFAULT-CTR THEN ;
: USB-IRQ
    0 USB-ISTR DUP @
    400 OVER AND IF USB-RESET THEN
\    800 OVER AND IF USB-SUSPEND THEN
    1000 OVER AND IF USB-WAKE THEN
    8000 AND IF USB-CTR THEN
    ! ;
: USB-SET-IRQ-HANDLER   ['] USB-IRQ $2F CELLS IVT + ! ;
: USB-ENABLE
    USB-SET-IRQ-HANDLER   USB-CTR-HANDLERS 8 CELLS 0 FILL
    80000000 NVIC NVIC-ISER BIS!
    00800000 RCC-APB1ENR BIS!
    1 USB-CNTR !      0 USB-CNTR !   0 USB-ISTR !
    1C00 USB-CNTR !   0 USB-ISTR !
    USB-DEFAULT-IRQMASK USB-CNTR !
    0 USB-BTABLE !   USB-PMA 400 0 FILL   80 USB-DADDR !
    0 DUP DUP USB-EP1R ! USB-EP2R ! USB-EP3R !
    ;

CREATE NULL$
     00 C,

CREATE DEVICE$
     12 C,  01 C,  10 C,  01 C,  02 C,  00 C,  00 C,  40 C,  83 C,  04 C,  40 C,  57 C,  00 C,  00 C,  01 C,  02 C,
     00 C,  01 C,

CREATE CONFIG$
     09 C,  02 C,  3E C,  00 C,  02 C,  01 C,  00 C, 0C0 C,  80 C,
     09 C,  04 C,  00 C,  00 C,  01 C,  02 C,  02 C,  01 C,  00 C,
\    05 C,  24 C,  00 C,  01 C,  10 C,
     05 C,  24 C,  01 C,  00 C,  01 C,
     04 C,  24 C,  02 C,  06 C,
     05 C,  24 C,  06 C,  00 C,  01 C,
     07 C,  05 C,  82 C,  03 C,  40 C,  00 C,  80 C,
     09 C,  04 C,  01 C,  00 C,  02 C,  0A C,  00 C,  00 C,  00 C,
     07 C,  05 C,  03 C,  02 C,  40 C,  00 C,  00 C,
     07 C,  05 C,  81 C,  02 C,  40 C,  00 C,  00 C,

CREATE LANGUAGES$
     04 C,  03 C,  09 C,  04 C,

CREATE MANUFACTURER$
     0E C,  03 C,  4F C,  00 C,  6C C,  00 C,  69 C,  00 C,  6D C,  00 C,  65 C,  00 C,  78 C,  00 C,

CREATE PRODUCT$
     20 C,  03 C,  4F C,  00 C,  6C C,  00 C,  69 C,  00 C,  6D C,  00 C,  65 C,  00 C,  78 C,  00 C,  69 C,  00 C,
     6E C,  00 C,  6F C,  00 C,  2D C,  00 C,  53 C,  00 C,  54 C,  00 C,  4D C,  00 C,  33 C,  00 C,  32 C,  00 C,

CREATE LINE-CODING$
     00 C, 0C2 C,
     01 C,  00 C,
     01 C,  00 C,
     08 C,  00 C,

CREATE STRING$
    LANGUAGES$ , MANUFACTURER$ , PRODUCT$ ,


: SLICE   2 CELLS BUFFER ;
: SLICE!   TUCK CELL + ! ! ;
: SLICE#   CELL + @ ;
: SLICE@   DUP @ SWAP SLICE# ;
: SLICE#!   CELL + ! ;
: /SLICE   2DUP +! CELL + -! ;

SLICE EP0-PENDING
VARIABLE EP0-REQ-TYPE
VARIABLE EP0-REQ
VARIABLE EP0-REQ-VALUE0
VARIABLE EP0-REQ-VALUE1
VARIABLE EP0-REQ-INDEX
VARIABLE EP0-REQ-LENGTH

: EP-TX-STATE! ( state ep -- )
    CELLS USB-EP0R + DUP @ 0BFBF AND 8080 OR ROT 4 ROTATE XOR SWAP ! ;
: EP-RX-STATE! ( state ep -- )
    CELLS USB-EP0R + DUP @ 0BF8F AND 8080 OR ROT 0C ROTATE XOR SWAP ! ;

: EP-START-RXTX ( ep -- )   CELLS USB-EP0R + DUP @ 0BFBF AND 8080 OR 3030 XOR SWAP ! ;

: EP-RESET-RX#   ( ep -- ) 8400 SWAP USB-BTABLE-RX# H! ;

: EP-CLEAR-CTR ( ep mask -- )   SWAP CELLS USB-EP0R + DUP @ ROT AND SWAP ! ;
: EP-CLEAR-CTR-TX ( ep -- )   08F0F EP-CLEAR-CTR ;
: EP-CLEAR-CTR-RX ( ep -- )   00F8F EP-CLEAR-CTR ;
: EP-SET-ADDRESS ( addr ep -- )   CELLS USB-EP0R + TUCK @ 0F00 AND 8080 OR OR SWAP ! ;

: EP0-SEND-PENDING ( max -- )
    EP0-PENDING DUP CELL + @ ROT MIN 40 MIN
    DUP 0 USB-BTABLE-TX# H!
    >R
    DUP @ 0 USB-BTABLE-TX R@ >PMA
    R> SWAP /SLICE
    ;

: EP0-SEND-DESCRIPTOR
    EP0-REQ-VALUE1 @ CASE
        0 OF LANGUAGES$ DUP C@ ELSE
        1 OF DEVICE$ DUP C@ ELSE
        2 OF CONFIG$ DUP 2 + H@ ELSE
        3 OF EP0-REQ-VALUE0 @ CELLS STRING$ + @ DUP C@ ELSE
        NULL$
    ENDCASE
    EP0-PENDING SLICE!  EP0-REQ-LENGTH @ EP0-SEND-PENDING
    0 DUP EP-RESET-RX# EP-START-RXTX
    ;

: EP0-SEND-0LENGTH-DATA
    0 0 USB-BTABLE-TX# H!
    0 DUP EP-RESET-RX# EP-START-RXTX
    ;

: EP0-GET-STATUS
    2 0 USB-BTABLE-TX# H! 0 0 USB-BTABLE-TX H!
    0 DUP EP-RESET-RX# EP-START-RXTX
    ;
: EP0-SET-ADDRESS-START   EP0-SEND-0LENGTH-DATA ;
: EP0-SET-ADDRESS
    0 EP0-REQ ! EP0-REQ-VALUE0 @ 080 OR USB-DADDR !
    4 1 DO I DUP EP-SET-ADDRESS LOOP
    ;
: EP0-SET-CONFIGURATION   EP0-SEND-0LENGTH-DATA ;
: EP0-SEND-CLASS-RESPONSE
    EP0-REQ @ 21 = IF
        LINE-CODING$ 8 EP0-PENDING SLICE! EP0-REQ-LENGTH @ EP0-SEND-PENDING
        0 DUP EP-RESET-RX# EP-START-RXTX
    ELSE
        EP0-SEND-0LENGTH-DATA
    THEN
    ;

: EP0-SETUP ( -- )
    0 EP-CLEAR-CTR-RX 2 0 2DUP EP-TX-STATE! EP-RX-STATE!
    0 USB-BTABLE-RX
    DUP C@ EP0-REQ-TYPE !   1+ DUP C@ EP0-REQ ! 1+
    DUP C@ EP0-REQ-VALUE0 ! 1+ DUP C@ EP0-REQ-VALUE1 ! 1+
    DUP H@ EP0-REQ-INDEX !  1+ 1+
        H@ EP0-REQ-LENGTH !
    EP0-REQ @ CASE
         0 OF EP0-GET-STATUS ELSE
         5 OF EP0-SET-ADDRESS-START ELSE
         6 OF EP0-SEND-DESCRIPTOR ELSE
         9 OF EP0-SET-CONFIGURATION ELSE
        20 OF EP0-SEND-CLASS-RESPONSE ELSE
        21 OF EP0-SEND-CLASS-RESPONSE ELSE
        22 OF EP0-SEND-CLASS-RESPONSE ELSE
            EP0-SEND-0LENGTH-DATA
    ENDCASE
    ;

: EP0-HANDLE-IN
    0 EP-CLEAR-CTR-TX
    EP0-REQ @ 5 = IF EP0-SET-ADDRESS THEN
    EP0-PENDING SLICE# IF EP0-REQ-LENGTH @ EP0-SEND-PENDING ELSE 0 0 USB-BTABLE-TX# H! THEN
    0 DUP EP-RESET-RX# EP-START-RXTX
    ;

: EP0-HANDLE-OUT
    0 EP-CLEAR-CTR-RX
    1 0 EP-TX-STATE! 1 0 EP-RX-STATE!
    ;

: EP0-HANDLER ( ep dir -- )
    NIP IF USB-EP0R @ 0800 AND IF EP0-SETUP ELSE EP0-HANDLE-OUT THEN
    ELSE EP0-HANDLE-IN
    THEN
    ;

: USB
    USB-ENABLE
    ['] EP0-HANDLER USB-CTR-HANDLERS !
    ;

: TURNKEY   HEX LEDS-INIT ABORT ;

